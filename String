Unsafe.Coerce unsafeCoerce :: forall (a :: Type) (b :: Type) . a -> b
Unsafe.Coerce unsafeCoerceUnlifted :: forall (a :: TYPE ('BoxedRep 'Unlifted)) (b :: TYPE ('BoxedRep 'Unlifted)) . a -> b
Unsafe.Coerce unsafeCoerceAddr :: forall (a :: TYPE 'AddrRep) (b :: TYPE 'AddrRep) . a -> b
Unsafe.Coerce unsafeCoerce# :: forall (r1 :: RuntimeRep) (r2 :: RuntimeRep) (a :: TYPE r1) (b :: TYPE r2) . a -> b
GHC.Exts unsafeCoerce# :: forall (r1 :: RuntimeRep) (r2 :: RuntimeRep) (a :: TYPE r1) (b :: TYPE r2) . a -> b
GHC.Prim unsafeCoerce# :: a -> b
GHC.Prim raise# :: v -> p
GHC.PrimopWrappers raise# :: v -> p
GHC.Utils.Exception throw :: forall (r :: RuntimeRep) (a :: TYPE r) e . Exception e => e -> a
Control.Exception throw :: forall (r :: RuntimeRep) . forall (a :: TYPE r) . forall e . Exception e => e -> a
-- plus more results not shown, pass --count=20 to see more
